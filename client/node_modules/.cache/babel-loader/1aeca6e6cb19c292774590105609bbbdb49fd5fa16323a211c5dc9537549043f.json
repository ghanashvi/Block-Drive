{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\OneDrive\\\\Desktop\\\\Block_Drive\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  useEffect(() => {\n    getCurrentWalletConnected();\n    addWalletListener();\n  }, [walletAddress]);\n  const connectWallet = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        /* MetaMask is installed */\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n  const getCurrentWalletConnected = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\"\n        });\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          console.log(accounts[0]);\n        } else {\n          console.log(\"Connect to MetaMask using the Connect button\");\n        }\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n  const addWalletListener = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      });\n    } else {\n      /* MetaMask is not installed */\n      setWalletAddress(\"\");\n      console.log(\"Please install MetaMask\");\n    }\n  };\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    // const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const provider = window.ethereum != null ? new ethers.providers.Web3Provider(window.ethereum) : ethers.providers.getDefaultProvider();\n    const loadProvider = async () => {\n      if (provider) {\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        let contractAddress = \"0xf0b324441f6151436e672DFf6b4037F96D3CD94d\";\n        const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n        //console.log(contract);\n        setContract(contract);\n        setProvider(provider);\n      } else {\n        console.error(\"Metamask is not installed\");\n      }\n    };\n    provider && loadProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!modalOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"share\",\n      onClick: () => setModalOpen(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setModalOpen: setModalOpen,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        i: \"head\",\n        children: \"Block-Drive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg bg2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg bg3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"yellow\"\n        },\n        children: [\"Account : \", account ? account : \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        account: account,\n        provider: provider,\n        contract: contract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        contract: contract,\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Xw2TEGetm6EtTh81YjYImhpDpmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Upload","useState","useEffect","ethers","FileUpload","Display","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","walletAddress","setWalletAddress","getCurrentWalletConnected","addWalletListener","connectWallet","window","ethereum","accounts","request","method","console","log","err","error","message","length","on","account","setAccount","contract","setContract","provider","setProvider","modalOpen","setModalOpen","providers","Web3Provider","getDefaultProvider","loadProvider","location","reload","send","signer","getSigner","address","getAddress","contractAddress","Contract","abi","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","i","class","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Home/OneDrive/Desktop/Block_Drive/client/src/App.js"],"sourcesContent":["import Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n\n  useEffect(() => {\n    getCurrentWalletConnected();\n    addWalletListener();\n  }, [walletAddress]);\n\n  const connectWallet = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        /* MetaMask is installed */\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  const getCurrentWalletConnected = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          console.log(accounts[0]);\n        } else {\n          console.log(\"Connect to MetaMask using the Connect button\");\n        }\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  const addWalletListener = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      });\n    } else {\n      /* MetaMask is not installed */\n      setWalletAddress(\"\");\n      console.log(\"Please install MetaMask\");\n    }\n  }; \n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    // const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const provider = ((window.ethereum != null) ? new ethers.providers.Web3Provider(window.ethereum) : ethers.providers.getDefaultProvider());\n\n    const loadProvider = async () => {\n      if (provider) {\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        let contractAddress = \"0xf0b324441f6151436e672DFf6b4037F96D3CD94d\";\n\n        const contract = new ethers.Contract(\n          contractAddress,\n          Upload.abi,\n          signer\n        );\n        //console.log(contract);\n        setContract(contract);\n        setProvider(provider);\n      } else {\n        console.error(\"Metamask is not installed\");\n      }\n    };\n    provider && loadProvider();\n  }, []);\n  return (\n    <>\n      {!modalOpen && (\n        <button className=\"share\" onClick={() => setModalOpen(true)}>\n          Share\n        </button>\n      )}\n      {modalOpen && (\n        <Modal setModalOpen={setModalOpen} contract={contract}></Modal>\n      )}\n\n      <div className=\"App\">\n         <h1 i=\"head\">Block-Drive</h1> \n        \n        <div class=\"bg\"></div>\n        <div class=\"bg bg2\"></div>\n        <div class=\"bg bg3\"></div>\n\n        <p style={{ color: \"yellow\" }}>\n          Account : {account ? account : \"Not connected\"}\n        </p>\n        <FileUpload\n          account={account}\n          provider={provider}\n          contract={contract}\n        ></FileUpload>\n        <Display contract={contract} account={account}></Display>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}